{"version":3,"sources":["terminal.js","lib/header-mobile.js","lib/runner.js","lib/tooltips.js"],"names":["$","config","tooltips","templates","regular","document","getElementById","dark","wrapperAttr","templateConf","offset","boundary","get","fallbackPlacement","selectors","groups","scale","stages","tge","startRunner","find","tooltip","click","ev","collapse","makeTooltips","Object","keys","reduce","acc","name","arr","fn","injectSelectors","Array","map","s","_extends","_defineProperty","_ref","callbacks","template","_template","content","serialize","node","XMLSerializer","serializeToString","call","selector","each","index","$el","this","target","parents","hover","container","make","key"],"mappings":"aAAAA,EAAE,WACA,IAAMC,EAAS,CACbC,SAAU,CACRC,UAAW,CACTC,QAASC,SAASC,eAAe,mBACjCC,KAAMF,SAASC,eAAe,iBAEhCE,YAAa,yBACbC,aAAc,CACZC,QAAS,GACTC,SAAUX,EAAG,QAASY,IAAI,GAC1BC,kBAAmB,eAMnBC,EAAY,CAChBZ,SAAU,CACRC,UAAW,CACTC,QAAS,oDACTG,KAAMP,EAAE,gCAEVe,OAAQ,CACNC,MAAO,SACPC,OAAQ,UACRC,IAAK,UAKIC,YAAYlB,GAEHC,SAASY,EAAUZ,SAASC,WAEpDH,EAAEc,EAAUZ,SAASa,OAAOC,OAAOI,KAAKN,EAAUZ,SAASC,UAAUC,SAASiB,QAAQ,QACtFrB,EAAEc,EAAUZ,SAASa,OAAOC,OAAOI,KAAKN,EAAUZ,SAASC,UAAUI,MAAMc,QAAQ,UCnCnFrB,EAAE,iBAAiBsB,MAAM,SAACC,GACxBvB,EAAE,eAAewB,SAAS,iUCF9B,SAASL,YAAYlB,GASnB,MAAO,CACLC,SAAU,SAASY,GACjB,IAAMZ,EAAWuB,aAAaxB,EAAOC,UAErC,OAAOwB,OAAOC,KAAKb,GAAWc,OAAO,SAACC,EAAKC,GACzC,IAbWC,EAAKC,EAaVC,GAbKF,EAaqBjB,EAAUgB,GAb1BE,EAaiC9B,EAAS4B,IAZpDC,aAAeG,MAAQH,EAAM,CAACA,IAE/BI,IAAI,SAAAC,GACX,OAAOJ,EAAIhC,EAAGoC,OAUZ,OAAAC,SAAA,GAAYR,EAAZS,gBAAA,GAAkBR,EAAQG,KACzB,uTChBT,SAASR,aAATc,GAAgE,IAAxCpC,EAAwCoC,EAAxCpC,UAAWM,EAA6B8B,EAA7B9B,aAAcD,EAAe+B,EAAf/B,YACzCgC,EAAY,CAChBC,SAAW,SAAAC,GAAA,OAAYD,EAASE,SAChCC,UAAY,SAACC,GAAD,OAAW,IAAIC,eAAiBC,kBAAkBF,IAC9DG,KAAM,SAAAP,GAAA,OAAY,SAAAQ,GAAA,OAAYjD,EAAGiD,GAAWC,KAAK,SAASC,GACxD,IAAMC,EAAMpD,EAAGqD,MACTC,EAASF,EAAIG,QAAQ/C,GAAaI,IAAI,GAY5C,OAVAZ,EAAGsD,GAASE,MAAM,WAChBJ,EAAI/B,QAAQ,YAGd+B,EAAI/B,QAAJgB,SAAA,CACEI,SAAAA,EACAgB,UAAWL,GACR3C,IAGE2C,OAgBLM,EAAO,SAAC5B,GAAD,OAZOW,EAYctC,EAAU2B,GAX9B,CACVU,EAAUC,SACVD,EAAUI,UACVJ,EAAUQ,MAGDpB,OAAO,SAACC,EAAKG,GACtB,OAAOA,EAAGH,IACTY,GATc,IAACA,GAcpB,OAAOf,OAAOC,KAAKxB,GAAWyB,OAAO,SAACC,EAAK8B,GACzC,OAAAtB,SAAA,GAAYR,EAAZS,gBAAA,GAAkBqB,EAAMD,EAAKC,MAC5B","file":"main.js","sourcesContent":["$(function () {\n  const config = {\n    tooltips: {\n      templates: {\n        regular: document.getElementById('tooltip-regular'),\n        dark: document.getElementById('tooltip-dark'),\n      },\n      wrapperAttr: '[data-tooltip-trigger]',\n      templateConf: {\n        offset: -35,\n        boundary: $( 'body' ).get(0),\n        fallbackPlacement: 'clockwise',\n        // container: false\n      }\n    },\n  };\n\n  const selectors = {\n    tooltips: {\n      templates: {\n        regular: '[data-toggle=\"tooltip\"]:not([data-tooltip-theme])',\n        dark: $('[data-tooltip-theme=\"dark\"]'),\n      },\n      groups: {\n        scale: '.scale',\n        stages: '.stages',\n        tge: '.tge',\n      }\n    }\n  };\n\n  const runner = startRunner(config);\n\n  const tooltips = runner.tooltips(selectors.tooltips.templates);\n\n  $(selectors.tooltips.groups.scale).find(selectors.tooltips.templates.regular).tooltip('show');\n  $(selectors.tooltips.groups.scale).find(selectors.tooltips.templates.dark).tooltip('show');\n});\n","(() => {\n  $('#menu-toggler').click((ev) => {\n    $('#headerMenu').collapse('toggle');\n  })\n})();\n","function startRunner(config) {\n  const fnArray = (arr, fn) => {\n    const a = arr instanceof Array ? arr : [arr];\n\n    return a.map(s => {\n      return fn( $( s ) );\n    });\n  }\n\n  return {\n    tooltips: function(selectors) {\n      const tooltips = makeTooltips(config.tooltips);\n\n      return Object.keys(selectors).reduce((acc, name) => {\n        const injectSelectors = fnArray(selectors[name], tooltips[name])\n        return { ...acc, [name] : injectSelectors };\n      }, {});\n    },\n  }\n}\n","function makeTooltips({ templates, templateConf, wrapperAttr }) {\n  const callbacks = {\n    template : template => template.content,\n    serialize : (node) => (new XMLSerializer()).serializeToString(node),\n    call: template => selector => $( selector ).each(function(index) {\n      const $el = $( this );\n      const target = $el.parents(wrapperAttr).get(0);\n\n      $( target ).hover(() => {\n        $el.tooltip('toggle');\n      });\n\n      $el.tooltip({\n        template,\n        container: $el,\n        ...templateConf\n      });\n\n      return $el;\n    }),\n  };\n\n  const processing = (template) => {\n    const fns = [\n      callbacks.template,\n      callbacks.serialize,\n      callbacks.call\n    ];\n\n    return fns.reduce((acc, fn) => {\n      return fn(acc);\n    }, template);\n  }\n\n  const make = (name) => processing(templates[name]);\n\n  return Object.keys(templates).reduce((acc, key) => {\n    return { ...acc, [key]: make(key) };\n  }, {});\n}\n"]}